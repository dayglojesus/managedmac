# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

# ---- original file header ----
#
# @summary
#   Returns a Payload Array for Mobileconfig type. Accepts a Hash. Each key is a 
#string representing the PayloadType key. The value of said key is the payload
#data. Keys with empty or :undef values will be expunged.
#
#
Puppet::Functions.create_function(:'managedmac::process_mobileconfig_params') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    

    if args.size != 1
      e = "process_mobileconfig_params(): Wrong number of args: #{args.size} for 1"
      raise(Puppet::ParseError, e)
    end

    params = args[0]

    unless params.is_a? Hash
      e = "process_mobileconfig_params(): Wrong arg type! (#{params.class} instead of Hash)"
      raise(Puppet::ParseError, e)
    end

    params.inject([]) do |memo, (domain,hash)|
      hash.delete_if { |k,v| (v.respond_to? :empty? and v.empty?) or v == :undef }
      unless hash.empty?
        hash['PayloadType'] = domain
        memo << hash
      end
      memo
    end

  
  end
end
