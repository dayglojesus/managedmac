# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

# ---- original file header ----
#
# @summary
#   Returns a Payload Hash of properly formatted mounts. Expects Array.
#
#
Puppet::Functions.create_function(:'managedmac::process_mounts') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    

    if args.size != 1
      e = "process_mounts(): Wrong number of args: #{args.size} for 1"
      raise(Puppet::ParseError, e)
    end

    urls = args[0]

    unless urls.is_a? Array
      e = "process_mounts(): Wrong arg type! (#{urls.class} instead of Array)"
      raise(Puppet::ParseError, e)
    end

    unless urls.empty?
      urls.collect! { |u| Hash['AuthenticateAsLoginUserShortName', true,
        'Hide', false, 'URL', u] }
    end

    Hash['PayloadType', 'com.apple.loginitems.managed',
      'AutoLaunchedApplicationDictionary-managed',
      [urls].flatten
    ]
  
  end
end
